{
  "version": 3,
  "sources": ["../src/findRoots.ts"],
  "sourcesContent": ["function findRootsComplexPolynomial(epsilon: number = 0.1, range: number = 2, step: number = 0.001): Array<[number, number]> | string{\r\n    const solutions: Array<[number, number]> = [];\r\n\r\n    function polynomial(x: number, y: number): number {\r\n        const term1 = Math.pow((Math.pow(x, 2) - Math.pow(y, 2) + x), 2) - Math.pow((2 * x * y + y), 2) + x;\r\n        const term2 = 2 * (Math.pow(x, 2) - Math.pow(y, 2) + x) * (2 * x * y + y) + y;\r\n        return Math.pow(term1, 2) + Math.pow(term2, 2) - 2;\r\n    }\r\n\r\n    for (let x = -range; x <= range; x += step) {\r\n        for (let y = -range; y <= range; y += step) {\r\n            const result = polynomial(x, y);\r\n\r\n            if (Math.abs(result) < epsilon) {\r\n                solutions.push([parseFloat(x.toFixed(2)), parseFloat(y.toFixed(2))]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return solutions.length > 0 ? solutions : \"Keine reellen Nullstellen gefunden\";\r\n}\r\n\r\n// Beispielaufruf\r\nconsole.log(findRootsComplexPolynomial());\r\n"],
  "mappings": ";;;AAAA,WAAS,2BAA2B,UAAkB,KAAK,QAAgB,GAAG,OAAe,MAAwC;AACjI,UAAM,YAAqC,CAAC;AAE5C,aAAS,WAAW,GAAW,GAAmB;AAC9C,YAAM,QAAQ,KAAK,IAAK,KAAK,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI,GAAI,CAAC,IAAI,KAAK,IAAK,IAAI,IAAI,IAAI,GAAI,CAAC,IAAI;AAClG,YAAM,QAAQ,KAAK,KAAK,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI,MAAM,IAAI,IAAI,IAAI,KAAK;AAC5E,aAAO,KAAK,IAAI,OAAO,CAAC,IAAI,KAAK,IAAI,OAAO,CAAC,IAAI;AAAA,IACrD;AAEA,aAAS,IAAI,CAAC,OAAO,KAAK,OAAO,KAAK,MAAM;AACxC,eAAS,IAAI,CAAC,OAAO,KAAK,OAAO,KAAK,MAAM;AACxC,cAAM,SAAS,WAAW,GAAG,CAAC;AAE9B,YAAI,KAAK,IAAI,MAAM,IAAI,SAAS;AAC5B,oBAAU,KAAK,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,GAAG,WAAW,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;AAAA,QACvE;AAAA,MACJ;AAAA,IACJ;AAEA,WAAO,UAAU,SAAS,IAAI,YAAY;AAAA,EAC9C;AAGA,UAAQ,IAAI,2BAA2B,CAAC;",
  "names": []
}
